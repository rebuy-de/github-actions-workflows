name: Spring Boot Pipeline

on:
  workflow_call:
    inputs:
      jdk:
        required: true
        type: string
      base_image_branch:
        required: false
        type: string
      maven_build_environment:
        required: false
        type: string
        default: |
          NPM_CONFIG_CACHE=/npm/cache
          NPM_CONFIG_HOME=/npm
          LC_ALL=en_US.UTF-8
          LANG=en_US.UTF-8
    secrets:
      SONAR_AUTH_TOKEN:
        required: true

env:
  ALMALINUX_VERSION: "9"
  SONAR_HOST_URL: https://sonar.rebuy.tools

jobs:
  build:
    name: Maven tests
    runs-on: [self-hosted, linux, X64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Generate outputs
      shell: bash
      run: |
        if [ "${{ inputs.jdk }}" == "8" ]; then
          IMAGE="rebuy-base-image-builder-maven"
        else
          IMAGE="java${{ inputs.jdk }}-maven"
        fi

        if [ "${{ inputs.base_image_branch }}" != "" ]; then
          TAG="${ALMALINUX_VERSION}-${{ inputs.base_image_branch }}"
        else
          TAG="${ALMALINUX_VERSION}"
        fi

        if [ "${GITHUB_EVENT_NAME}" == "pull_request" ]; then
          echo "##[set-output name=artifact_version;]${GITHUB_HEAD_REF}-SNAPSHOT"
        else
          echo "##[set-output name=artifact_version;]${GITHUB_REF:11}-snapshot"
        fi

        echo "##[set-output name=day_of_week;]$(date +%A)"

        echo "##[set-output name=host_ip;]$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)"

        echo "##[set-output name=image;]${IMAGE}:${TAG}"

        MAVEN_BUILD_ENV=""

        while IFS= read -r ENV_LINE
        do
          MAVEN_BUILD_ENV="${MAVEN_BUILD_ENV} -e ${ENV_LINE}"
        done < <(printf '%s' "${{ inputs.maven_build_environment }}")

        echo "##[set-output name=maven_build_environment;]${MAVEN_BUILD_ENV}"

      id: generate_image

    - name: Run tests
      shell: bash
      run: |
        set -x
        podman run --rm \
          -e TESTCONTAINERS_RYUK_DISABLED=true \
          -e TESTCONTAINERS_HOST_OVERRIDE=${{ steps.generate_image.outputs.host_ip }} \
          ${{ steps.generate_image.outputs.maven_build_environment }} \
          -v $(pwd):/silo \
          -v /run/podman.sock:/run/docker.sock \
          -v /home/github/cache/maven:/m2/repository \
          -v /home/github/cache/npm:/npm/cache \
          -w /silo \
          --entrypoint /bin/bash \
          074509403805.dkr.ecr.eu-west-1.amazonaws.com/${{ steps.generate_image.outputs.image }} \
          -c "mvnw --version && mvnw -Dspring.profiles.active=testing clean verify"

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      with:
        report_paths: 'silo/target/*-reports/*.xml'

    - name: Run SonarQube Analysis
      shell: bash
      if: ${{ github.event_name == 'push' }}
      run: |
        set -x
        podman run --rm \
          -v $(pwd):/silo \
          -v /home/github/cache/maven:/m2/repository \
          -e SONAR_AUTH_TOKEN=${{ secrets.SONAR_AUTH_TOKEN }} \
          -e SONAR_HOST_URL=${SONAR_HOST_URL} \
          -w /silo \
          --entrypoint /bin/bash \
          074509403805.dkr.ecr.eu-west-1.amazonaws.com/${{ steps.generate_image.outputs.image }} \
          -c "mvnw sonar:sonar"

    - name: Upload Vagrant artifact
      shell: bash
      if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' || ( github.event_name == 'schedule' && steps.generate_image.outputs.date == 'Sunday' ) }}
      run: |
        set -x
        podman run --rm \
          -v $(pwd):/silo \
          -v /home/github/cache/maven:/m2/repository \
          -w /silo \
          --entrypoint /bin/bash \
          074509403805.dkr.ecr.eu-west-1.amazonaws.com/${{ steps.generate_image.outputs.image }} \
          -c "mvnw org.codehaus.mojo:versions-maven-plugin:2.11.0:set -pl silo -DnewVersion=${{ steps.generate_image.outputs.artifact_version }} && mvnw deploy -pl silo -Dspring.profiles.active=testing -DskipTests=true -DskipITs"

  container_build:
    runs-on: [self-hosted, linux, X64]
    name: Container Build

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Generate outputs
      shell: bash
      run: |
        if [ "${GITHUB_EVENT_NAME}" == "pull_request" ]; then
          echo "##[set-output name=tags;]074509403805.dkr.ecr.eu-west-1.amazonaws.com/${GITHUB_REPOSITORY:9}:${GITHUB_HEAD_REF} 074509403805.dkr.ecr.eu-west-1.amazonaws.com/${GITHUB_REPOSITORY:9}:${{ github.event.pull_request.head.sha }}"
        else
          echo "##[set-output name=tags;]074509403805.dkr.ecr.eu-west-1.amazonaws.com/${GITHUB_REPOSITORY:9}:${GITHUB_REF:11} 074509403805.dkr.ecr.eu-west-1.amazonaws.com/${GITHUB_REPOSITORY:9}:${GITHUB_SHA}"
        fi

        if [ "${{ inputs.base_image_branch }}" != "" ]; then
          echo "##[set-output name=base_image_tag;]${ALMALINUX_VERSION}-${{ inputs.base_image_branch }}"
        else
          echo "##[set-output name=base_image_tag;]${ALMALINUX_VERSION}"
        fi
      id: generate_tags

    - name: Build
      uses: redhat-actions/buildah-build@v2
      env:
        REGISTRY_AUTH_FILE: /run/user/1001/containers/auth.json
      with:
        containerfiles: deployment/docker/Dockerfile
        context: .
        build-args: |
          BASE_TAG=${{ steps.generate_tags.outputs.base_image_tag }}
        extra-args: |
          -v=/home/github/cache/maven:/m2/repository:shared,rw
          --ulimit=nofile=262144:262144
        tags: ${{ steps.generate_tags.outputs.tags }}

    - name: Push to ECR
      uses: redhat-actions/push-to-registry@v2
      with:
        tags: ${{ steps.generate_tags.outputs.tags }}
